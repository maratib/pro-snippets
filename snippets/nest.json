{
  "xPRO:Nest Service": {
    "prefix": "nest-service",
    "description": "Nest Service",
    "body": [
      "import { Injectable } from '@nestjs/common';",
      "",
      "/**",
      "* Service docs",
      "*/",
      "@Injectable()",
      "export class ${1:Name}Service {",
      "",
      "\t/**",
      "\t* Function docs",
      "\t* @returns string",
      "\t*/",
      "\t$0getHello(): string {",
      "\t\treturn 'Hello'",
      "\t}",
      "}"
    ]
  },
  "xPRO:Nest Service with Logger": {
    "prefix": "nest-service-logger",
    "description": "Nest Service with Logger",
    "body": [
      "import { Injectable, Logger } from '@nestjs/common';",
      "",
      "/**",
      "* Service docs",
      "*/",
      "@Injectable()",
      "export class ${1:Name}Service {",
      "\tprivate readonly logger = new Logger(this.constructor.name);",
      "",
      "\t/**",
      "\t* Function docs",
      "\t* @returns string",
      "\t*/",
      "\t$0getHello(): string {",
      "\t\treturn 'Hello'",
      "\t}",
      "}"
    ]
  },
  "xPRO:Nest Logger": {
    "prefix": "nest-logger",
    "description": "Nest Logger",
    "body": ["private readonly logger = new Logger(this.constructor.name);"]
  },
  "xPRO:Nest CRUD Service": {
    "prefix": "nest-curd-service",
    "description": "Nest CRUD Service",
    "body": [
      "import { Injectable, Logger } from '@nestjs/common';",
      "",
      "/**",
      "* service docs",
      "*/",
      "@Injectable()",
      "export class ${1:Name}Service {",
      "\tprotected readonly logger = new Logger(this.constructor.name);",
      "",
      "\t/**",
      "\t* get by id",
      "\t* @param id",
      "\t* @return null",
      "\t*/",
      "\tgetById(id: number) {",
      "\t\treturn id;",
      "\t}",
      "",
      "\tgetAll() {",
      "\t\treturn null;",
      "\t}",
      "",
      "\tdelete(id: number) {",
      "\t\treturn id;",
      "\t}",
      "",
      "\tupdate(id: number, post: object) {",
      "\t\treturn id",
      "\t}",
      "",
      "\tcreate(post: object) {",
      "\t\treturn null;",
      "\t}",
      "}"
    ]
  },
  "xPRO:Nest CRUD controller": {
    "prefix": "nest-crud-controller",
    "description": "Nest CRUD controller",
    "body": [
      "import {Body, Controller, Delete, Get, Logger, Param, Post, Put,} from '@nestjs/common';",
      "",
      "/**",
      "* Controller docs",
      "*/",
      "@Controller('${1/(.*)/${1:/downcase}/}')",
      "export class ${1:Name}Controller {",
      "\tprivate readonly logger = new Logger(this.constructor.name);",
      "\tconstructor(private readonly ${1/(.*)/${1:/downcase}/}Service: ${1:Name}Service) {}",
      "",
      "\t/**",
      "\t* Function docs",
      "\t* @param id",
      "\t* @returns null",
      "\t*/",
      "\t@Get(':id')",
      "\tgetById(@Param('id') id: number) {",
      "\t\t$0",
      "\t\treturn null;",
      "\t}",
      "",
      "\t@Get()",
      "\tgetAll() {",
      "\t\treturn null;",
      "\t}",
      "",
      "\t@Post()",
      "\tasync doPost(@Body() post: object) {",
      "\t\treturn null;",
      "\t}",
      "",
      "\t@Put(':id')",
      "\tasync doUpdate(@Param('id') id: string, @Body() post: object) {",
      "\t\treturn null;",
      "\t}",
      "",
      "\t@Delete(':id')",
      "\tasync doDelete(@Param('id') id: string) {",
      "\t\treturn null;",
      "\t}",
      "}"
    ]
  }
}
