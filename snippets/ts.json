{
  "xPRO:Console Log": {
    "description": "Log",
    "prefix": ["con", "log"],
    "body": ["console.log($1);"]
  },
  "xPRO:Create Type": {
    "description": "Create Type",
    "prefix": "ts-type",
    "body": [
      "export type ${1:TypeName} = {",
      "\t${2:name}: string;",
      "\t$0",
      "};"
    ]
  },
  "xPRO:Create Interface": {
    "description": "Create Interface",
    "prefix": "ts-interface",
    "body": [
      "export interface ${1:InterfaceName} {",
      "\tid: number;",
      "\t$0",
      "}"
    ]
  },
  "xPRO:Create Class": {
    "description": "Create Class",
    "prefix": "ts-class",
    "body": [
      "export class ${1:ClassName} {",
      "\tconstructor($2) {}",
      "\tadd(a: number, b: number = 10): number$0 {",
      "\t\treturn a + b;",
      "\t}",
      "\t$0",
      "}"
    ]
  },
  "xPRO:Create Enum": {
    "description": "Create Enum",
    "prefix": "ts-enum",
    "body": [
      "export enum ${1:enumName} {",
      "\t${2:North} = 'N',",
      "\t${3:East} = 'E',",
      "\t$0",
      "};"
    ]
  },
  "xPRO:Create Template String": {
    "description": "Create Template String",
    "prefix": "ts-templateString",
    "body": ["const ${1:name} = `$0`;"]
  },

  "xPRO:Create Arrow Function": {
    "description": "Create Arrow Function",
    "prefix": "ts-arrow",
    "body": ["const ${1:name} = ($2) => { $0 };"]
  },

  "xPRO:Create Switch": {
    "description": "Create Switch",
    "prefix": "ts-switch",
    "body": [
      "switch (expression) {",
      "\tcase \"primary\":",
      "\t\t//statement",
      "\t\tbreak;",
      "\tcase \"error\":",
      "\t\t//statement",
      "\t\tbreak;",
      "\tdefault:",
      "\t\t//statement",
      "\t\tbreak;",
      "}"
    ]
  }
}
